#
# Copyright (c) 2021-2022 zPonds <https://shinenet.cn>
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the GPL License.
# See /LICENSE for more information.
#
# https://github.com/Erope/openwrt_nezha/
# Description: Build Nezha using GitHub Actions
#

name: Build NeZha

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://git.openwrt.org/openwrt/openwrt.git
  REPO_CHECKOUT: v17.01.6
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: ./.github/.config_x64
  UPLOAD_BIN_DIR: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        git checkout $REPO_CHECKOUT
        make distclean
        echo 'src-git nezha https://github.com/Erope/openwrt_nezha' >> feeds.conf.default

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
    
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download
      run: |
        cd openwrt
        make -j16 download V=s

    - name: Compile the BIN
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j2 toolchain/install
        make -j2 package/luci-app-nezha/compile V=99
        make -j2 package/openwrt-nezha/compile V=99
        mv -f $GITHUB_WORKSPACE/.github/.config_x86 .config
        make -j2 toolchain/install
        make -j2 package/openwrt-nezha/compile V=99
        mv -f $GITHUB_WORKSPACE/.github/.config_arm64 .config
        make -j2 toolchain/install
        make -j2 package/openwrt-nezha/compile V=99
        echo "::set-output name=status::success"

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(curl -m 10 -sL "https://api.github.com/repos/nezhahq/agent/releases/latest" | grep "tag_name" | head -n 1 | awk -F ":" '{print $2}' | sed 's/\"//g;s/,//g;s/ //g')"
        touch release.txt
        echo "::set-output name=status::success"

    - name: Upload BIN to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: |
          openwrt/bin/packages/x86_64/nezha/*
          openwrt/bin/packages/brcm2708_bcm2710/nezha/*
          openwrt/bin/packages/i386_pentium4/nezha/*
